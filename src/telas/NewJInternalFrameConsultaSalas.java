/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package telas;

import ConexaoBD.Dados;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Silvio da Silva
 * Classe para a janela de dados 
 */
public class NewJInternalFrameConsultaSalas extends javax.swing.JInternalFrame {
Dados dadosArq = new Dados();
    /**
     * Creates new form NewJInternalFrameConsultaSalas
     */
    public NewJInternalFrameConsultaSalas() {
        initComponents();
        
        // Preenche a combobox sala
        jComboBoxConSala.removeAllItems();
         String conteudo="";
         String Caminho="Sala.dad";
           try{
           FileReader arq = new FileReader(Caminho);
           BufferedReader lerArq = new BufferedReader(arq);
           String linha="";
           
           try{
               linha = lerArq.readLine();
               while(linha!=null){
                   String[] coluna = linha.split(";");
                   conteudo += linha;
                   linha = lerArq.readLine();
                   jComboBoxConSala.addItem(coluna[0]);
                }
               arq.close();
           } catch (IOException ex) {
               conteudo = "Erro: Nao foi possivel ler Arquivo ! ";
           }
       } catch(IOException ex) {
           conteudo = "Erro: Arquivo inexistente ! ";
       }
        if (conteudo.contains("Erro"));
        else {
            }
        
        // Preenche a combobox Sala Cafe
        jComboBoxConCafe.removeAllItems();
         String conteudoCafe="";
         String caminhoCafe="SalaCafe.dad";
           try{
           FileReader arq2 = new FileReader(caminhoCafe);
           BufferedReader lerArq2 = new BufferedReader(arq2);
           String linha2="";
           
           try{
               linha2 = lerArq2.readLine();
               while(linha2!=null){
                   String[] coluna2 = linha2.split(";");
                   conteudoCafe += linha2;
                   linha2 = lerArq2.readLine();
                   jComboBoxConCafe.addItem(coluna2[0]);
                }
               arq2.close();
           } catch (IOException ex) {
               conteudo = "Erro: Nao foi possivel ler Arquivo ! ";
           }
       } catch(IOException ex) {
           conteudo = "Erro: Arquivo inexistente ! ";
       }
        if (conteudo.contains("Erro"));
        else {
            }
        
     
    }         
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTableConsultaSalas = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jComboBoxConSala = new javax.swing.JComboBox<>();
        jComboBoxConCafe = new javax.swing.JComboBox<>();
        jComboBoxConEtapa = new javax.swing.JComboBox<>();
        jButtonPesquisarSala = new javax.swing.JButton();
        jButtonPesquisarCafe = new javax.swing.JButton();
        jButtonPesquisarEtapa = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();

        setClosable(true);
        setTitle("Cosultas Salas e Etapas");

        jTableConsultaSalas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Sala ", "Sala Café", "Etapas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableConsultaSalas.getTableHeader().setReorderingAllowed(false);
        jTableConsultaSalas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableConsultaSalasMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTableConsultaSalas);

        jLabel1.setText("Sala");

        jLabel2.setText("Sala Café");

        jLabel3.setText("Etapa Evento");

        jComboBoxConSala.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jComboBoxConSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxConSalaActionPerformed(evt);
            }
        });

        jComboBoxConCafe.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jComboBoxConEtapa.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Etapa 1", "Etapa 2" }));

        jButtonPesquisarSala.setText("Pesquisar");
        jButtonPesquisarSala.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarSalaActionPerformed(evt);
            }
        });

        jButtonPesquisarCafe.setText("Pesquisar");
        jButtonPesquisarCafe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarCafeActionPerformed(evt);
            }
        });

        jButtonPesquisarEtapa.setText("Pequisar");
        jButtonPesquisarEtapa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonPesquisarEtapaActionPerformed(evt);
            }
        });

        jLabel4.setText("ou");

        jLabel5.setText("ou");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 555, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jButtonPesquisarSala)
                                    .addComponent(jComboBoxConSala, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)
                                .addComponent(jLabel4))
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jButtonPesquisarCafe)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jComboBoxConCafe, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(64, 64, 64)
                                .addComponent(jButtonPesquisarEtapa))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(jComboBoxConEtapa, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBoxConSala, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxConCafe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBoxConEtapa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonPesquisarSala)
                    .addComponent(jButtonPesquisarCafe)
                    .addComponent(jButtonPesquisarEtapa))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        setBounds(400, 10, 591, 482);
    }// </editor-fold>//GEN-END:initComponents

    private void jTableConsultaSalasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableConsultaSalasMouseClicked
        //Trazer dados para tela
        /*String nome =""+jTableConsultaSalas.getValueAt(jTableConsultaSalas.getSelectedRow(),0);
        String Caminho="Sala.dad";
        String conteudo="";
        int capacidade=0;
        
           try{
           FileReader arq = new FileReader(Caminho);
           BufferedReader lerArq = new BufferedReader(arq);
           String linha="";
           
           try{
               linha = lerArq.readLine();
               while(linha!=null){ 
                   String[] coluna = linha.split(";");
                   conteudo += linha;
                   linha = lerArq.readLine();
                   Object [] posicao = {coluna[0],coluna[1],};
                   if (coluna[0].contains(nome)){
                      capacidade = Integer.parseInt(coluna[1]); 
                      
                      // Exibir Pessoas Show mensagen
                      String Caminho3="Pessoas.dad";
                      String conteudo3="";
                      String total="";
                      int part=0;
                      
                      try{
                        FileReader arq3 = new FileReader(Caminho3);
                        BufferedReader lerArq3 = new BufferedReader(arq3);
                        String linha3="";
                        try{
                        linha3 = lerArq3.readLine();
                        while(linha3!=null){ 
                        String[] coluna3 = linha3.split(";");
                        conteudo3 += linha3;
                        linha3 = lerArq3.readLine();
                        if (coluna3[1].contains(nome)){
                        total += "\n"+coluna3[0];
                        part++;
                        //JOptionPane.showMessageDialog(null,part);
                        //JOptionPane.showMessageDialog(null,total);
                        
                        }else{}
                      }
                      arq3.close();
                      JOptionPane.showMessageDialog(null,"Participantes "+part+" de "+capacidade+"\n"+total);
                      
                      
                }catch(IOException ex){}
                }catch(IOException ex){}
                      // final

                }else{}
                }arq.close();

               }catch (IOException ex) {conteudo = "Erro: Nao foi possivel ler Arquivo ! ";}
               }catch(IOException ex) {conteudo = "Erro: Arquivo inexistente ! ";}
                    if (conteudo.contains("Erro"));            
                    else {}*/
                       
    }//GEN-LAST:event_jTableConsultaSalasMouseClicked

    private void jComboBoxConSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxConSalaActionPerformed
        
        
    }//GEN-LAST:event_jComboBoxConSalaActionPerformed

    private void jButtonPesquisarSalaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarSalaActionPerformed
        DefaultTableModel ConsultaSalas = (DefaultTableModel) jTableConsultaSalas.getModel();
        ConsultaSalas.setRowCount(0);
        String sala =""+jComboBoxConSala.getSelectedItem();
        String Caminhotabela="Pessoas.dad";
        String conteudotabela="";
        try{
           FileReader arq3 = new FileReader(Caminhotabela);
           BufferedReader lerArq3 = new BufferedReader(arq3);
           String linha3="";
           try{
               linha3 = lerArq3.readLine();
               while(linha3!=null){
                   String[] coluna3 = linha3.split(";");
                   conteudotabela += linha3;
                   linha3 = lerArq3.readLine();
                   Object [] posicao3 = {coluna3[0],coluna3[1],coluna3[2],coluna3[3]};
                   if (coluna3[1].contains(sala)){
                   ConsultaSalas.addRow(posicao3);
                   
               }else{}
               
               }arq3.close();} catch (IOException ex) {
               conteudotabela = "Erro: Nao foi possivel ler Arquivo ! ";
           }
       } catch(IOException ex) {
           conteudotabela = "Erro: Arquivo inexistente ! ";
       }
        if (conteudotabela.contains("Erro"));
        else {
            }
    }//GEN-LAST:event_jButtonPesquisarSalaActionPerformed

    private void jButtonPesquisarCafeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarCafeActionPerformed
        DefaultTableModel ConsultaSalas = (DefaultTableModel) jTableConsultaSalas.getModel();
        ConsultaSalas.setRowCount(0);
        String cafe =""+jComboBoxConCafe.getSelectedItem();
        String Caminhotabela="Pessoas.dad";
        String conteudotabela="";
        try{
           FileReader arq3 = new FileReader(Caminhotabela);
           BufferedReader lerArq3 = new BufferedReader(arq3);
           String linha3="";
           try{
               linha3 = lerArq3.readLine();
               while(linha3!=null){
                   String[] coluna3 = linha3.split(";");
                   conteudotabela += linha3;
                   linha3 = lerArq3.readLine();
                   Object [] posicao3 = {coluna3[0],coluna3[1],coluna3[2],coluna3[3]};
                   if (coluna3[2].contains(cafe)){
                   ConsultaSalas.addRow(posicao3);
                   
               }else{}
               
               }arq3.close();} catch (IOException ex) {
               conteudotabela = "Erro: Nao foi possivel ler Arquivo ! ";
           }
       } catch(IOException ex) {
           conteudotabela = "Erro: Arquivo inexistente ! ";
       }
        if (conteudotabela.contains("Erro"));
        else {
            }
    }//GEN-LAST:event_jButtonPesquisarCafeActionPerformed

    private void jButtonPesquisarEtapaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonPesquisarEtapaActionPerformed
        DefaultTableModel ConsultaSalas = (DefaultTableModel) jTableConsultaSalas.getModel();
        ConsultaSalas.setRowCount(0);
        String etapa =""+jComboBoxConEtapa.getSelectedItem();
        String Caminhotabela="Pessoas.dad";
        String conteudotabela="";
        try{
           FileReader arq3 = new FileReader(Caminhotabela);
           BufferedReader lerArq3 = new BufferedReader(arq3);
           String linha3="";
           try{
               linha3 = lerArq3.readLine();
               while(linha3!=null){
                   String[] coluna3 = linha3.split(";");
                   conteudotabela += linha3;
                   linha3 = lerArq3.readLine();
                   Object [] posicao3 = {coluna3[0],coluna3[1],coluna3[2],coluna3[3]};
                   if (coluna3[3].contains(etapa)){
                   ConsultaSalas.addRow(posicao3);
                   
               }else{}
               
               }arq3.close();} catch (IOException ex) {
               conteudotabela = "Erro: Nao foi possivel ler Arquivo ! ";
           }
       } catch(IOException ex) {
           conteudotabela = "Erro: Arquivo inexistente ! ";
       }
        if (conteudotabela.contains("Erro"));
        else {
            }
    }//GEN-LAST:event_jButtonPesquisarEtapaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonPesquisarCafe;
    private javax.swing.JButton jButtonPesquisarEtapa;
    private javax.swing.JButton jButtonPesquisarSala;
    private javax.swing.JComboBox<String> jComboBoxConCafe;
    private javax.swing.JComboBox<String> jComboBoxConEtapa;
    private javax.swing.JComboBox<String> jComboBoxConSala;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableConsultaSalas;
    // End of variables declaration//GEN-END:variables
}
